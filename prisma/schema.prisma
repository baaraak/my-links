generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Link {
  id     Int      @id @default(autoincrement())
  type   LinkType
  title  String
  url    String
  hide   Boolean  @default(false)
  user   User     @relation(fields: [userId], references: [id])
  userId Int
}

model Social {
  id     Int     @id @default(autoincrement())
  value  String
  hide   Boolean @default(false)
  user   User    @relation(fields: [userId], references: [id])
  userId Int
}

model Analytic {
  id       Int    @id @default(autoincrement())
  count    Int    @default(0)
  country  String
  ip       String
  socialId Int?
  linkId   Int?
  User     User?  @relation(fields: [userId], references: [id])
  userId   Int?
}

model User {
  id            Int        @id @default(autoincrement())
  name          String?
  email         String?    @unique
  emailVerified DateTime?  @map(name: "email_verified")
  image         String?
  username      String?    @unique
  title         String?
  bio           String?
  theme         String?
  showCredit    Boolean    @default(true)
  nsfw          Boolean    @default(false)
  createdAt     DateTime   @default(now()) @map(name: "created_at")
  updatedAt     DateTime   @updatedAt @map(name: "updated_at")
  links         Link[]
  socials       Social[]
  analytic      Analytic[]


  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

enum LinkType {
  HEADER
  EMBED
  URL
}
